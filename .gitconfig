[alias]
  a = add --all
  b = branch
  lb = branch --list                        # List local branches
  lrb = ls-remote --heads origin            # List remote branches
  cb = checkout -b                          # Create and checkout new branch
  co = checkout
  c = commit
  cm = commit -m
  acm = !git add -A && git commit -m
  d = diff --color-words
  ps = push
  pl = pull
  s = status
  l = log --graph --pretty=custom           # Show custom log and graph
  ll = log --stat --abbrev-commit           # Long listing
  lc = shortlog --summary --numbered        # List contributors
  url = remote -v

  # merge the current branch into master
  mb = "!f() { \
    declare currentBranch=\"$(git symbolic-ref --short HEAD)\"; \
    git pull origin master; \
    git checkout master; \
    git pull origin master; \
    git merge --no-ff $currentBranch; \
    git push; \
  }; f"

  # delete a branch locally and on the remote
  db = "!f() { \
    git branch -d \"$1\"; \
    git push origin --delete \"$1\"; \
  }; f"
  
  # pull all (sync all repos in current dir)
  pla = "!f() { \
    for i in `ls`; do cd $i; git pull; cd ..; done \
  }; f"

[pretty]
  custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
  #                     │        │            │            │             └─ author name
  #                     │        │            │            └─ message
  #                     │        │            └─ date (relative)
  #                     │        └─ decorations (branch, heads or tags)
  #                     └─ hash (abbreviated)

# Push easily http://stackoverflow.com/a/23918418/89484
[push]
  # Make `git push` automatically push relevant
  # annotated tags when pushing branches out
  followTags = true
  default = current

[user]
  name = AUTHORNAME
  email = AUTHOREMAIL

##[include]
##  path = ~/.gitconfig.local
  
##[core]
##  fileMode = false
